<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://alshedivat.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://alshedivat.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-05-20T20:12:52+00:00</updated><id>https://alshedivat.github.io/feed.xml</id><title type="html">Dr. Ghaffari</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design.
</subtitle><entry><title type="html">Hiring in the Age of AI: Hope and Fear</title><link href="https://alshedivat.github.io/blog/2023/AI-hiring/" rel="alternate" type="text/html" title="Hiring in the Age of AI: Hope and Fear" /><published>2023-05-20T00:00:00+00:00</published><updated>2023-05-20T00:00:00+00:00</updated><id>https://alshedivat.github.io/blog/2023/AI-hiring</id><content type="html" xml:base="https://alshedivat.github.io/blog/2023/AI-hiring/"><![CDATA[<h2 id="changing-job-markets">Changing Job Markets</h2>

<p>The information age has fundamentally altered many processes in society. The availability of vast amounts of information coupled with advanced data processing mechanisms has facilitated an increasing emphasis on “data-driven” strategies among organizations. Large firms and institutions are increasingly turning toward data-derived insights to inform and to support decision making. The hiring process is one domain already feeling the effects of these changes.</p>

<p>The hiring process can be a painful, drawn out, cumbersome, and downright expensive process. And that holds for both job seekers and job recruiters. For job hunters, the search for a decent position is time-consuming, often involving dozens, if not hundreds, of applications each filled with cycles of interviews, document drafting, aptitude and skills assessments, and negotiations. Even competent and accomplished candidates can find themselves drifting for months in search of fitting role. For the job seekers, there is also an unfair asymmetry at play; their position during the hiring process is usually a big unknown. Recruitees are often left guessing how likely they are to land a position, how stiff the competition is, what work culture characteristics the recruiting firm is looking for, and so on. It is a typical practice for mid to large size firms to take multiple candidates through the entire interview process, knowing full well that most candidates will not be offered any position. These candidates are only being entertained as alternates and to fill hiring process quotas. The whole process can be an immense drain on a job seeker’s time, and as the old adage goes, “time is money.”</p>

<p>The recruitment process can also be stressful and costly on the hiring side. Finding the right candidate for an open position typically involves casting a wide net, sifting through voluminous quantities of resumes, cover letters, and applications. Giving due attention to the right candidates is time-consuming and difficult for firms without large resources to devote to the recruitment process. Hiring for a new type of role presents an added difficulty; if a firm does not have much experience in a technical area, it can be hard to assess the quality and fit of candidates for such a new type of role. And even when firms hone in on a stellar candidate, it is not unusal for top talent to be sitting on multiple job offers. If they decide their services will be more valued elsewhere, that leaves the firm having to restart their hiring process for the position all over again.</p>

<h2 id="ai-hiring-and-human-biases">AI, Hiring, and Human Biases</h2>

<p>With dozens, hundreds, and sometimes even thousands of applicants for a position, a manual review of all candidate applications can be labor intensive, even prohibitively so. Here hiring algorithms can help curtail costs and labor time. Things as simple as filtering based on keywords can reduce the candidate pool a hiring manager must look over. On the other end of the spectrum, approaches like AI deep learning and computer vision can be deployed for in-depth evaluation of a job candidates’ facial expression. However, the process of incorporating data science and AI into hiring practices can be fraught with hiccups and biases.</p>

<p>There is a notion that ‘data science and analytics’ is a neutral, unbiased mechanism for analyzing data and making data-driven decisions. There is a bit of truth here. AI and machine learning, deployed effectively, can help reduce bias. By combing through vast volumes of data, more than a human could process in a feasible amount of time, data analytics and algorithms can facilitate data-driven decision making. By deploying rigorous analytic techniques, rooted in mathematics and statistics, AI and machine learning also remove some of the inherent biases of relying solely on human opinion and intuition. Nonetheless there is still arbitrariness in the choice of algorithm and in the choice of data processing and modeling methodologies. To assume that data analytics can completely remove all biases is a mistake. As Gideon Mann and Cathy O’Neil observe writing for the <strong>Harvard Business Review</strong> <d-cite key="gideononeil2016"></d-cite>,</p>

<blockquote>
  <p>“Algorithms are, in part, our opinions embedded in code. They reflect human biases and prejudices that lead to machine learning mistakes and misinterpretations. This bias shows up in numerous aspects of our lives, including algorithms used for electronic discovery, teacher evaluations, car insurance, credit score rankings, and university admissions.”</p>
</blockquote>

<p>With all of the benefits and detriments, big data and AI is revolutionizing the modern hiring process. A 2018 survey of over 8800 hiring managers conducted by LinkedIn revealed the following trends. A total of 67% of hiring managers claimed to use AI in hiring, claiming it helped reduce biases (43%), deliver the best candidate matches (31%). Respondents claimed AI Is helpful for sourcing candidates (58%), screening candidates (56%), and nurturing candidates (55%). Furthermore, hiring managers pointed out that big data and talent intelligence from past hires has been used to increase retention (56%), evaluate skill gaps (50%), and build better offers (50%) <d-cite key="linkedin2018"></d-cite>.</p>

<p>Many hiring and candidate selection algorithms are trained on past hiring data. The idea: by identifying the data patterns of successful past hires’ applications and searching for similar patterns in current job applicants’ application, a firm can replicate past hiring successes. While this seems like a good strategy, it does suffer from a major pitfall: training on past hire data, an algorithm not only past hiring patterns, but also all the biases associated with past hires. For instance, Marianne Bertrand and Sendhil Mullainathan in a study for the National Bureau of Economic Research, found that resumes with white names were 50% more likely to receive callbacks as compared to resumes with African-American names. Furthermore, a high-quality resume with a white-sounding name elicited 30% more callbacks, whereas increases for a high-quality resume with an African American name only showed marginal increases in callbacks. Furthermore, these patterns of biases and discrimination were observed across the board, being equally present with employers who listed ‘Equal Opportunity Employer’ in their job ads <d-cite key="bertrandmullainathan2003"></d-cite>.</p>

<p>Indeed, the reckless, unscrupulous deployment of AI algorithms on past hiring data means that the learning algorithm will likely train on and learn all the past mistakes, prejudices, and biases in the hiring process. The next case study is one such case.</p>

<h2 id="a-big-data-hiring-failure-the-amazon-case">A Big Data Hiring Failure: The Amazon Case</h2>

<p>A naïve hiring algorithm that solely and blindly learns from past hiring decisions would likely replicate these biases moving forward. An example of this was automated job applicant filtering program deployed at Amazon. In 2014, with over half a million employees and growing, Amazon decided to use an algorithmic approach to improve its hiring efficiency. AI algorithms were devised at Amazon’s Edinburgh engineering hub to recognize over 50,000 resume terms, ranking job applicants from one to five stars. Training the algorithms on past hiring data, the AI picked up on and replicated a major facet of Amazon’s past hiring culture: male dominance. The algorithm implicitly upvoted resumes using language cues typically favored by male candidates. In fact, even if Amazon’s past hiring was fair in terms of gender, an AI algorithm can still learn unfair biases for future hiring decisions. That is, even if the best candidates for past positions were indeed mostly male, that does not mean that the best candidate for the next open position will conform to the same profile.</p>

<p>In addition to replicating gender bias, the complexity of the challenge led the hiring algorithms to select random, unqualified candidates on many occasions. After the discovery of these shortcomings, the project was scraped. Recently Amazon has revisited and revamped its automated hiring strategy, using AI for more straightforward tasks (e.g., removing duplicate applications) and for increasing diversity hires <d-cite key="dastin2018"></d-cite>.</p>

<h2 id="humantic-and-hirevue-more-case-studies">Humantic and HireVue: More Case Studies</h2>

<p>Some the most basic and fundamental analytical techniques used to assist in the hiring process are screening and filtering algorithms. In the simplest scenarios, these methods simply screen resumes looking for keywords that indicate good fit and qualification for a role. Naïve implementations of screening systems may cause employers to miss great candidates. However, even naïve implementations can save considerable time and resources. Some job positions receive thousands of applicants; when manually reviewed, each resume is glanced at for an average of a few seconds. Here screening can process more data in those few seconds than a human can manually consider. Adding a little sophistication in the form of some background analytics can provide even more information in little additional time. On the other end of the screening spectrum, Humantic claims to have a system that data mines candidates’ resumes. Using text analysis and psycholinguistics, the service is able to profile the personality of candidates without the need for additional testing. The service is used by more than 100 companies. As another example of the power of analytics, in a few milliseconds an AI system can calculate the approximate commute time based on a candidate’s location <d-cite key="heilweil2019"></d-cite></p>

<p>A striking example of AI in hiring is a system that goes far beyond simple filtering of resume terms. HireVue, a recruiting tech firm, has a developed an AI system that uses candidates web or mobile camera and microphone to assess candidates’ eye movements, facial patterns, diction, and tone of voice. These facial movements are used to assess a job candidate’s excitement, and they constitute 29% of a candidate’s score.  Based on these measurements, candidates are ranked against each other and given an ‘employability’ score. HireVue claims its AI can hone in on cues beyond just word choice on a resume. Among other things, HireVue claims that its AI systems are less prone to bias than human recruiters. They argue that AI can pick up on tiny signals that might be missed by human recruiter. A standard 30-minute HireVue assessment can generate as many as 500,000 data points. HireVue’s systems are currently used by many major employers, including Hilton and Unilever. Hilton has touted HireVue’s tech’s ability to reduce the average processing time for thousands of job applicants from 6 weeks to 5 days. Unilever claims HireVue’s systems have helped it reduce hiring labor hours by 100,000 and recruitment costs by $1 million <d-cite key="harwell2019"></d-cite></p>

<p>Nonetheless, HireVue’s AI system has drawn a volley of criticism. One neuroscientist, Lisa Feldman Barret, led a meta-study reviewing 1000 published papers on computer vision and human emotion. Barret’s group concluded that these AI systems are highly effective at detecting and differentiating facial expressions, but not at signifying what they mean. Indeed, the significance of specific facial expressions are unique to different individuals, can vary by context, and vary widely in different cultures. Barrett relates the example of a frown, which may be taken as a cue of anger, hence a red flag for sales-type jobs. Nonetheless, a frown may also be indicative of intense focus, a potentially positive indicator of a hard work ethic. HireVue has countered these criticisms by claiming it has on-staff psychologists that work to tailor the scoring algorithm of their AI system to each client’s needs. Simon Mondal, the CEO of a job candidate screening platform, Ideal, which screens 5 million candidates a month, points out that these AI systems must be continually revisited and updated to prevent the encroachment of biases. Patterns always change, and the same is true in the field of hiring prospective candidates. Ultimately, a satisfactory AI screening system should be able to adjust its learning, and this generally requires human oversight. As Mondal points out, “You have to have a way to make sure that you aren’t picking people who are grouped in a specific way and that you’re only hiring those types of people” <d-cite key="heilweil2019"></d-cite>, <d-cite key="harwell2019"></d-cite>.</p>

<p>Potential concerns with the deployment of AI in hiring practices has even led to protective legislation. In the UK, a poll commissioned by the Royal Arts Society found that 60% of the public opposes the use of automated systems for hiring. Still, a YouGov poll found that only 32% are aware, in general, of the use of AI in decision-making, while only 14% are aware of its increasing adoption in recruitment and only 9% of its use in criminal justice <d-cite key="booth2019"></d-cite>. Public concern has begun converting into legislative action. In Illinois, state representative Jaime Andrade Jr. (D) co-sponsored “Public Act 101-0260,” a bill requiring employers in the state to notify job applicants of how their AI hiring systems work and to get the job applicant’s consent. Governor J.B. Pritzker signed the bill into law in August of 2019, and the bill went into law January of 2020 <d-cite key="harwell2019"></d-cite>. In November of 2019, lawyers at the Electronic Privacy Information Center (EPIC) filed a complaint with the FTC against HireVue on the grounds of potential bias, inaccuracy, and lacking transparency. The lawsuit also pointed to possible deceptive trade practices; HireVue claims it does not use facial recognition while EPIC contends its facial analysis constitutes facial recognition. The lawsuit came on the heels of congressional legislation that grants the FTC powers to investigate and regulate “automated decision systems” <d-cite key="heilweil2019"></d-cite>. Indeed, the rise of AI poses some challenges for antidiscrimination measures; in the worst case, a firm may attempt to hide biased recruiting policies behind algorithmic complexity. Already the Equal Employment Opportunities Commission (EEOC) has investigated several cases of alleged, AI-driven discrimination <d-cite key="opferetal2019"></d-cite>.</p>

<p>The hiring process can be complicated, painstaking, and time-consuming. The use of AI and machine learning offers a tremendous resource to manage and mitigate this complexity. As with all other technology, it brings its own share of promises and threats. The ultimate utility of this tech will largely be driven by how humans choose to adopt, use, and regulate it. Until people figure out how to relate AI and machine learning to hiring in an open, constructive way, the prospect of AI-led hiring will continue creating hope and fear.</p>]]></content><author><name>Novin Ghaffari</name></author><category term="AI/ML" /><summary type="html"><![CDATA[An overview of the potential benefits and possible drawbacks of the increasing use of AI hiring]]></summary></entry><entry><title type="html">a post with giscus comments</title><link href="https://alshedivat.github.io/blog/2022/giscus-comments/" rel="alternate" type="text/html" title="a post with giscus comments" /><published>2022-12-10T15:59:00+00:00</published><updated>2022-12-10T15:59:00+00:00</updated><id>https://alshedivat.github.io/blog/2022/giscus-comments</id><content type="html" xml:base="https://alshedivat.github.io/blog/2022/giscus-comments/"><![CDATA[<p>This post shows how to add GISCUS comments.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[an example of a blog post with giscus comments]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://alshedivat.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog" /><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://alshedivat.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://alshedivat.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">a post with redirect</title><link href="https://alshedivat.github.io/blog/2022/redirect/" rel="alternate" type="text/html" title="a post with redirect" /><published>2022-02-01T17:39:00+00:00</published><updated>2022-02-01T17:39:00+00:00</updated><id>https://alshedivat.github.io/blog/2022/redirect</id><content type="html" xml:base="https://alshedivat.github.io/blog/2022/redirect/"><![CDATA[<p>Redirecting to another page.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[you can also redirect to assets like pdf]]></summary></entry><entry><title type="html">a post with diagrams</title><link href="https://alshedivat.github.io/blog/2021/diagrams/" rel="alternate" type="text/html" title="a post with diagrams" /><published>2021-07-04T17:39:00+00:00</published><updated>2021-07-04T17:39:00+00:00</updated><id>https://alshedivat.github.io/blog/2021/diagrams</id><content type="html" xml:base="https://alshedivat.github.io/blog/2021/diagrams/"><![CDATA[<p>This theme supports generating various diagrams from a text description using <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> plugin.
Below, we generate a few examples of such diagrams using languages such as <a href="https://mermaid-js.github.io/mermaid/" target="\_blank">mermaid</a>, <a href="https://plantuml.com/" target="\_blank">plantuml</a>, <a href="https://vega.github.io/vega-lite/" target="\_blank">vega-lite</a>, etc.</p>

<p><strong>Note:</strong> different diagram-generation packages require external dependencies to be installed on your machine.
Also, be mindful of that because of diagram generation the fist time you build your Jekyll website after adding new diagrams will be SLOW.
For any other details, please refer to <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> README.</p>

<h2 id="mermaid">Mermaid</h2>

<p>Install mermaid using <code class="language-plaintext highlighter-rouge">node.js</code> package manager <code class="language-plaintext highlighter-rouge">npm</code> by running the following command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> mermaid.cli
</code></pre></div></div>

<p>The diagram below was generated by the following code:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% mermaid %}
sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
{% endmermaid %}
</code></pre></div></div>

<div class="jekyll-diagrams diagrams mermaid">
  <svg id="mermaid-1684613581425" width="100%" xmlns="http://www.w3.org/2000/svg" height="100%" style="max-width:450px;" viewBox="-50 -10 450 231"><style>#mermaid-1684613581425 .label{font-family:trebuchet ms,verdana,arial;color:#333}#mermaid-1684613581425 .node circle,#mermaid-1684613581425 .node ellipse,#mermaid-1684613581425 .node polygon,#mermaid-1684613581425 .node rect{fill:#ececff;stroke:#9370db;stroke-width:1px}#mermaid-1684613581425 .node.clickable{cursor:pointer}#mermaid-1684613581425 .arrowheadPath{fill:#333}#mermaid-1684613581425 .edgePath .path{stroke:#333;stroke-width:1.5px}#mermaid-1684613581425 .edgeLabel{background-color:#e8e8e8}#mermaid-1684613581425 .cluster rect{fill:#ffffde!important;stroke:#aa3!important;stroke-width:1px!important}#mermaid-1684613581425 .cluster text{fill:#333}#mermaid-1684613581425 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:trebuchet ms,verdana,arial;font-size:12px;background:#ffffde;border:1px solid #aa3;border-radius:2px;pointer-events:none;z-index:100}#mermaid-1684613581425 .actor{stroke:#ccf;fill:#ececff}#mermaid-1684613581425 text.actor{fill:#000;stroke:none}#mermaid-1684613581425 .actor-line{stroke:grey}#mermaid-1684613581425 .messageLine0{marker-end:"url(#arrowhead)"}#mermaid-1684613581425 .messageLine0,#mermaid-1684613581425 .messageLine1{stroke-width:1.5;stroke-dasharray:"2 2";stroke:#333}#mermaid-1684613581425 #arrowhead{fill:#333}#mermaid-1684613581425 #crosshead path{fill:#333!important;stroke:#333!important}#mermaid-1684613581425 .messageText{fill:#333;stroke:none}#mermaid-1684613581425 .labelBox{stroke:#ccf;fill:#ececff}#mermaid-1684613581425 .labelText,#mermaid-1684613581425 .loopText{fill:#000;stroke:none}#mermaid-1684613581425 .loopLine{stroke-width:2;stroke-dasharray:"2 2";marker-end:"url(#arrowhead)";stroke:#ccf}#mermaid-1684613581425 .note{stroke:#aa3;fill:#fff5ad}#mermaid-1684613581425 .noteText{fill:#000;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:14px}#mermaid-1684613581425 .section{stroke:none;opacity:.2}#mermaid-1684613581425 .section0{fill:rgba(102,102,255,.49)}#mermaid-1684613581425 .section2{fill:#fff400}#mermaid-1684613581425 .section1,#mermaid-1684613581425 .section3{fill:#fff;opacity:.2}#mermaid-1684613581425 .sectionTitle0,#mermaid-1684613581425 .sectionTitle1,#mermaid-1684613581425 .sectionTitle2,#mermaid-1684613581425 .sectionTitle3{fill:#333}#mermaid-1684613581425 .sectionTitle{text-anchor:start;font-size:11px;text-height:14px}#mermaid-1684613581425 .grid .tick{stroke:#d3d3d3;opacity:.3;shape-rendering:crispEdges}#mermaid-1684613581425 .grid path{stroke-width:0}#mermaid-1684613581425 .today{fill:none;stroke:red;stroke-width:2px}#mermaid-1684613581425 .task{stroke-width:2}#mermaid-1684613581425 .taskText{text-anchor:middle;font-size:11px}#mermaid-1684613581425 .taskTextOutsideRight{fill:#000;text-anchor:start;font-size:11px}#mermaid-1684613581425 .taskTextOutsideLeft{fill:#000;text-anchor:end;font-size:11px}#mermaid-1684613581425 .taskText0,#mermaid-1684613581425 .taskText1,#mermaid-1684613581425 .taskText2,#mermaid-1684613581425 .taskText3{fill:#fff}#mermaid-1684613581425 .task0,#mermaid-1684613581425 .task1,#mermaid-1684613581425 .task2,#mermaid-1684613581425 .task3{fill:#8a90dd;stroke:#534fbc}#mermaid-1684613581425 .taskTextOutside0,#mermaid-1684613581425 .taskTextOutside1,#mermaid-1684613581425 .taskTextOutside2,#mermaid-1684613581425 .taskTextOutside3{fill:#000}#mermaid-1684613581425 .active0,#mermaid-1684613581425 .active1,#mermaid-1684613581425 .active2,#mermaid-1684613581425 .active3{fill:#bfc7ff;stroke:#534fbc}#mermaid-1684613581425 .activeText0,#mermaid-1684613581425 .activeText1,#mermaid-1684613581425 .activeText2,#mermaid-1684613581425 .activeText3{fill:#000!important}#mermaid-1684613581425 .done0,#mermaid-1684613581425 .done1,#mermaid-1684613581425 .done2,#mermaid-1684613581425 .done3{stroke:grey;fill:#d3d3d3;stroke-width:2}#mermaid-1684613581425 .doneText0,#mermaid-1684613581425 .doneText1,#mermaid-1684613581425 .doneText2,#mermaid-1684613581425 .doneText3{fill:#000!important}#mermaid-1684613581425 .crit0,#mermaid-1684613581425 .crit1,#mermaid-1684613581425 .crit2,#mermaid-1684613581425 .crit3{stroke:#f88;fill:red;stroke-width:2}#mermaid-1684613581425 .activeCrit0,#mermaid-1684613581425 .activeCrit1,#mermaid-1684613581425 .activeCrit2,#mermaid-1684613581425 .activeCrit3{stroke:#f88;fill:#bfc7ff;stroke-width:2}#mermaid-1684613581425 .doneCrit0,#mermaid-1684613581425 .doneCrit1,#mermaid-1684613581425 .doneCrit2,#mermaid-1684613581425 .doneCrit3{stroke:#f88;fill:#d3d3d3;stroke-width:2;cursor:pointer;shape-rendering:crispEdges}#mermaid-1684613581425 .activeCritText0,#mermaid-1684613581425 .activeCritText1,#mermaid-1684613581425 .activeCritText2,#mermaid-1684613581425 .activeCritText3,#mermaid-1684613581425 .doneCritText0,#mermaid-1684613581425 .doneCritText1,#mermaid-1684613581425 .doneCritText2,#mermaid-1684613581425 .doneCritText3{fill:#000!important}#mermaid-1684613581425 .titleText{text-anchor:middle;font-size:18px;fill:#000}#mermaid-1684613581425 g.classGroup text{fill:#9370db;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:10px}#mermaid-1684613581425 g.classGroup rect{fill:#ececff;stroke:#9370db}#mermaid-1684613581425 g.classGroup line{stroke:#9370db;stroke-width:1}#mermaid-1684613581425 .classLabel .box{stroke:none;stroke-width:0;fill:#ececff;opacity:.5}#mermaid-1684613581425 .classLabel .label{fill:#9370db;font-size:10px}#mermaid-1684613581425 .relation{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1684613581425 #compositionEnd,#mermaid-1684613581425 #compositionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1684613581425 #aggregationEnd,#mermaid-1684613581425 #aggregationStart{fill:#ececff;stroke:#9370db;stroke-width:1}#mermaid-1684613581425 #dependencyEnd,#mermaid-1684613581425 #dependencyStart,#mermaid-1684613581425 #extensionEnd,#mermaid-1684613581425 #extensionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1684613581425 .branch-label,#mermaid-1684613581425 .commit-id,#mermaid-1684613581425 .commit-msg{fill:#d3d3d3;color:#d3d3d3}</style><style>#mermaid-1684613581425 {
    color: rgb(0, 0, 0);
    font: normal normal 400 normal 16px / normal "Times New Roman";
  }</style><g></g><g><line id="actor0" x1="75" y1="5" x2="75" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="0" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><line id="actor1" x1="275" y1="5" x2="275" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="200" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g><defs><marker id="arrowhead" refX="5" refY="2" markerWidth="6" markerHeight="4" orient="auto"><path d="M 0,0 V 4 L6,2 Z"></path></marker></defs><defs><marker id="crosshead" markerWidth="15" markerHeight="8" orient="auto" refX="16" refY="4"><path fill="black" stroke="#000000" stroke-width="1px" d="M 9,2 V 6 L16,4 Z" style="stroke-dasharray: 0, 0;"></path><path fill="none" stroke="#000000" stroke-width="1px" d="M 0,1 L 6,7 M 6,1 L 0,7" style="stroke-dasharray: 0, 0;"></path></marker></defs><g><text x="175" y="93" class="messageText" style="text-anchor: middle;">Hello John, how are you?</text><line x1="275" y1="100" x2="75" y2="100" class="messageLine0" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="fill: none;"></line></g><g><text x="175" y="128" class="messageText" style="text-anchor: middle;">Great!</text><line x1="75" y1="135" x2="275" y2="135" class="messageLine1" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="stroke-dasharray: 3, 3; fill: none;"></line></g><g><rect x="0" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><rect x="200" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g></svg>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[an example of a blog post with diagrams]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://alshedivat.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post" /><published>2021-05-22T00:00:00+00:00</published><updated>2021-05-22T00:00:00+00:00</updated><id>https://alshedivat.github.io/blog/2021/distill</id><content type="html" xml:base="https://alshedivat.github.io/blog/2021/distill/"><![CDATA[<h2 id="equations">Equations</h2>

<p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine.
You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>.
If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p>

<p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph.
Here is an example:</p>

\[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\]

<p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p>

<hr />

<h2 id="citations">Citations</h2>

<p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag.
The key attribute is a reference to the id provided in the bibliography.
The key attribute can take multiple ids, separated by commas.</p>

<p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover).
If you have an appendix, a bibliography is automatically created and populated in it.</p>

<p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover.
However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.</p>

<hr />

<h2 id="footnotes">Footnotes</h2>

<p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag.
The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p>

<hr />

<h2 id="code-blocks">Code Blocks</h2>

<p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags.
An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>.
For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p>

<d-code block="" language="javascript">
  var x = 25;
  function(x) {
    return x * x;
  }
</d-code>

<p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look good in the dark mode.
You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<hr />

<h2 id="interactive-plots">Interactive Plots</h2>

<p>You can add interative plots using plotly + iframes :framed_picture:</p>

<div class="l-page">
  <iframe src="/assets/plotly/demo.html" frameborder="0" scrolling="no" height="500px" width="100%" style="border: 1px dashed grey;"></iframe>
</div>

<p>The plot must be generated separately and saved into an HTML file.
To generate the plot that you see above, you can use the following code snippet:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span>
  <span class="sh">'</span><span class="s">https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv</span><span class="sh">'</span>
<span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">density_mapbox</span><span class="p">(</span>
  <span class="n">df</span><span class="p">,</span>
  <span class="n">lat</span><span class="o">=</span><span class="sh">'</span><span class="s">Latitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">lon</span><span class="o">=</span><span class="sh">'</span><span class="s">Longitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">z</span><span class="o">=</span><span class="sh">'</span><span class="s">Magnitude</span><span class="sh">'</span><span class="p">,</span>
  <span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
  <span class="n">center</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">lat</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">lon</span><span class="o">=</span><span class="mi">180</span><span class="p">),</span>
  <span class="n">zoom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
  <span class="n">mapbox_style</span><span class="o">=</span><span class="sh">"</span><span class="s">stamen-terrain</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">write_html</span><span class="p">(</span><span class="sh">'</span><span class="s">assets/plotly/demo.html</span><span class="sh">'</span><span class="p">)</span></code></pre></figure>

<hr />

<h2 id="layouts">Layouts</h2>

<p>The main text column is referred to as the body.
It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p>

<div class="fake-img l-body">
  <p>.l-body</p>
</div>

<p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p>

<div class="fake-img l-page">
  <p>.l-page</p>
</div>

<p>All of these have an outset variant if you want to poke out from the body text a little bit.
For instance:</p>

<div class="fake-img l-body-outset">
  <p>.l-body-outset</p>
</div>

<div class="fake-img l-page-outset">
  <p>.l-page-outset</p>
</div>

<p>Occasionally you’ll want to use the full browser width.
For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>.
You can also inset the element a little from the edge of the browser by using the inset variant.</p>

<div class="fake-img l-screen">
  <p>.l-screen</p>
</div>
<div class="fake-img l-screen-inset">
  <p>.l-screen-inset</p>
</div>

<p>The final layout is for marginalia, asides, and footnotes.
It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p>

<div class="fake-img l-gutter">
  <p>.l-gutter</p>
</div>

<hr />

<h2 id="other-typography">Other Typography?</h2>

<p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p>

<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>

<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>

<p>Strikethrough uses two tildes. <del>Scratch this.</del></p>

<ol>
  <li>First ordered list item</li>
  <li>Another item
⋅⋅* Unordered sub-list.</li>
  <li>Actual numbers don’t matter, just that it’s a number
⋅⋅1. Ordered sub-list</li>
  <li>And another item.</li>
</ol>

<p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p>

<p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅
⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅
⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>

<ul>
  <li>Unordered list can use asterisks</li>
  <li>Or minuses</li>
  <li>Or pluses</li>
</ul>

<p><a href="https://www.google.com">I’m an inline-style link</a></p>

<p><a href="https://www.google.com" title="Google's Homepage">I’m an inline-style link with title</a></p>

<p><a href="https://www.mozilla.org">I’m a reference-style link</a></p>

<p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p>

<p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p>

<p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p>

<p>URLs and URLs in angle brackets will automatically get turned into links.
http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes
example.com (but not on Github, for example).</p>

<p>Some text to show that the reference links can follow later.</p>

<p>Here’s our logo (hover to see the title text):</p>

<p>Inline-style:
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1" /></p>

<p>Reference-style:
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2" /></p>

<p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nf">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Python syntax highlighting</span><span class="sh">"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting.
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div>

<p>Colons can be used to align columns.</p>

<table>
  <thead>
    <tr>
      <th>Tables</th>
      <th style="text-align: center">Are</th>
      <th style="text-align: right">Cool</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>col 3 is</td>
      <td style="text-align: center">right-aligned</td>
      <td style="text-align: right">$1600</td>
    </tr>
    <tr>
      <td>col 2 is</td>
      <td style="text-align: center">centered</td>
      <td style="text-align: right">$12</td>
    </tr>
    <tr>
      <td>zebra stripes</td>
      <td style="text-align: center">are neat</td>
      <td style="text-align: right">$1</td>
    </tr>
  </tbody>
</table>

<p>There must be at least 3 dashes separating each header cell.
The outer pipes (|) are optional, and you don’t need to make the
raw Markdown line up prettily. You can also use inline Markdown.</p>

<table>
  <thead>
    <tr>
      <th>Markdown</th>
      <th>Less</th>
      <th>Pretty</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><em>Still</em></td>
      <td><code class="language-plaintext highlighter-rouge">renders</code></td>
      <td><strong>nicely</strong></td>
    </tr>
    <tr>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Blockquotes are very handy in email to emulate reply text.
This line is part of the same quote.</p>
</blockquote>

<p>Quote break.</p>

<blockquote>
  <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>
</blockquote>

<p>Here’s a line for us to start with.</p>

<p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p>

<p>This line is also a separate paragraph, but…
This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry><entry><title type="html">a post with github metadata</title><link href="https://alshedivat.github.io/blog/2020/github-metadata/" rel="alternate" type="text/html" title="a post with github metadata" /><published>2020-09-28T21:01:00+00:00</published><updated>2020-09-28T21:01:00+00:00</updated><id>https://alshedivat.github.io/blog/2020/github-metadata</id><content type="html" xml:base="https://alshedivat.github.io/blog/2020/github-metadata/"><![CDATA[<p>A sample blog page that demonstrates the accessing of github meta data.</p>

<h2 id="what-does-github-metadata-do">What does Github-MetaData do?</h2>
<ul>
  <li>Propagates the site.github namespace with repository metadata</li>
  <li>Setting site variables :
    <ul>
      <li>site.title</li>
      <li>site.description</li>
      <li>site.url</li>
      <li>site.baseurl</li>
    </ul>
  </li>
  <li>Accessing the metadata - duh.</li>
  <li>Generating edittable links.</li>
</ul>

<h2 id="additional-reading">Additional Reading</h2>
<ul>
  <li>If you’re recieving incorrect/missing data, you may need to perform a Github API<a href="https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md"> authentication</a>.</li>
  <li>Go through this <a href="https://jekyll.github.io/github-metadata/">README</a> for more details on the topic.</li>
  <li><a href="https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md">This page</a> highlights all the feilds you can access with github-metadata.
<br /></li>
</ul>

<h2 id="example-metadata">Example MetaData</h2>
<ul>
  <li>Host Name :</li>
  <li>URL :</li>
  <li>BaseURL :</li>
  <li>Archived :</li>
  <li>Contributors :</li>
</ul>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[a quick run down on accessing github metadata.]]></summary></entry><entry><title type="html">a post with twitter</title><link href="https://alshedivat.github.io/blog/2020/twitter/" rel="alternate" type="text/html" title="a post with twitter" /><published>2020-09-28T15:12:00+00:00</published><updated>2020-09-28T15:12:00+00:00</updated><id>https://alshedivat.github.io/blog/2020/twitter</id><content type="html" xml:base="https://alshedivat.github.io/blog/2020/twitter/"><![CDATA[<p>A sample blog page that demonstrates the inclusion of Tweets/Timelines/etc.</p>

<h1 id="tweet">Tweet</h1>
<p>An example of displaying a tweet:</p>
<div class="jekyll-twitter-plugin"><blockquote class="twitter-tweet"><p lang="sv" dir="ltr">jekyll-twitter-plugin (1.0.0): A Liquid tag plugin for Jekyll that renders Tweets from Twitter API <a href="http://t.co/m4EIQPM9h4">http://t.co/m4EIQPM9h4</a></p>&mdash; RubyGems (@rubygems) <a href="https://twitter.com/rubygems/status/518821243320287232?ref_src=twsrc%5Etfw">October 5, 2014</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="timeline">Timeline</h1>
<p>An example of pulling from a timeline:</p>
<div class="jekyll-twitter-plugin"><a class="twitter-timeline" data-width="500" data-tweet-limit="3" href="https://twitter.com/jekyllrb?ref_src=twsrc%5Etfw">Tweets by jekyllrb</a>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="additional-details">Additional Details</h1>
<p>For more details on using the plugin visit: <a href="https://github.com/rob-murray/jekyll-twitter-plugin">jekyll-twitter-plugin</a></p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><category term="formatting" /><summary type="html"><![CDATA[an example of a blog post with twitter]]></summary></entry><entry><title type="html">a post with disqus comments</title><link href="https://alshedivat.github.io/blog/2015/disqus-comments/" rel="alternate" type="text/html" title="a post with disqus comments" /><published>2015-10-20T15:59:00+00:00</published><updated>2015-10-20T15:59:00+00:00</updated><id>https://alshedivat.github.io/blog/2015/disqus-comments</id><content type="html" xml:base="https://alshedivat.github.io/blog/2015/disqus-comments/"><![CDATA[<p>This post shows how to add DISQUS comments.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[an example of a blog post with disqus comments]]></summary></entry><entry><title type="html">a post with math</title><link href="https://alshedivat.github.io/blog/2015/math/" rel="alternate" type="text/html" title="a post with math" /><published>2015-10-20T15:12:00+00:00</published><updated>2015-10-20T15:12:00+00:00</updated><id>https://alshedivat.github.io/blog/2015/math</id><content type="html" xml:base="https://alshedivat.github.io/blog/2015/math/"><![CDATA[<p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p>

<p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p>

\[\sum_{k=1}^\infty |\langle x, e_k \rangle|^2 \leq \|x\|^2\]

<p>You can also use <code class="language-plaintext highlighter-rouge">\begin{equation}...\end{equation}</code> instead of <code class="language-plaintext highlighter-rouge">$$</code> for display mode math.
MathJax will automatically number equations:</p>

<p>\begin{equation}
\label{eq:cauchy-schwarz}
\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)
\end{equation}</p>

<p>and by adding <code class="language-plaintext highlighter-rouge">\label{...}</code> inside the equation environment, we can now refer to the equation using <code class="language-plaintext highlighter-rouge">\eqref</code>.</p>

<p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="math" /><category term="stats" /><summary type="html"><![CDATA[an example of a blog post with some math]]></summary></entry></feed>